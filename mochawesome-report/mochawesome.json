{
  "stats": {
    "suites": 2,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-20T09:46:00.583Z",
    "end": "2023-09-20T09:46:01.098Z",
    "duration": 515,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "80fc5639-4950-4d9b-bc36-d8d71237e234",
      "title": "",
      "fullFile": "cypress\\e2e\\weather-api\\weather1.cy.js",
      "file": "cypress\\e2e\\weather-api\\weather1.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4728da8f-979e-4c50-aae8-fc9d040fc499",
          "title": "Weather API",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f45570f2-8df1-4d9c-b6fd-8b0b942fbaf0",
              "title": "GET alert type content",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "gets a list of alert types",
                  "fullTitle": "Weather API GET alert type content gets a list of alert types",
                  "timedOut": null,
                  "duration": 436,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let expectedEventType = '911';\ncy.request(\"GET\", `${weatherBaseUrl}/alerts/types`).then(response => {\n  expect(response.status).to.eq(200);\n  expect(response).to.have.property('headers');\n  expect(response).to.have.property('duration');\n  cy.log(\"response body: \" + response.body.eventTypes);\n  expect(response.body.eventTypes[0]).to.contains(expectedEventType);\n});",
                  "err": {},
                  "uuid": "51eff614-076a-4c27-ac0e-801661cada35",
                  "parentUUID": "f45570f2-8df1-4d9c-b6fd-8b0b942fbaf0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "51eff614-076a-4c27-ac0e-801661cada35"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 436,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}